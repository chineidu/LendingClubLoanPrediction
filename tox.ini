[tox]
envlist = coverage, test_local, test_global, lint, stylechecks, typechecks
skipsdist = True


[gh-actions]
python =
    3.10: test_global, lint, stylechecks, typechecks


[testenv]
install_command = pip install {opts} {packages}
whitelist_externals =
    coverage


[testenv:coverage]
deps =
	-r{toxinidir}/requirements/test_requirements.txt
setenv =
	PYTHONPATH = {toxinidir}
	PYTHONHASHSEED=0
commands=
	python classification_model/train_pipeline.py
	coverage report -m 
	pytest \
	-s -vv --basetemp={envtmpdir}


[testenv:test_local]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}
commands=
	python classification_model/predict.py
	coverage report -m
	pytest -s -vv --basetemp={envtmpdir}


[testenv:test_global]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}	
commands=
	python classification_model/predict.py
	pytest -s -vv --basetemp={envtmpdir}


[testenv:train]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
setenv =
	{[testenv:coverage]setenv}
commands=
	python classification_model/train_pipeline.py


[testenv:typechecks]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
commands = {posargs:mypy classification_model}


[testenv:stylechecks]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
commands = {posargs:flake8 classification_model tests}


[testenv:lint]
envdir = {toxworkdir}/coverage
deps =
	{[testenv:coverage]deps}
commands =
	isort classification_model tests
	black classification_model tests


[flake8]
exclude = .git, env
max-line-length = 100
